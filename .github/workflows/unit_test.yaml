name: Unit test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-configs:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        config: [maplight, maplight_gnn, gradientboost, histgradientboost, minimol]

    env:
      # CI runners don't have GPUs; force CPU and keep W&B offline.
      CUDA_VISIBLE_DEVICES: ""
      WANDB_MODE: offline
      PYTHONUNBUFFERED: "1"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install dgl -f https://data.dgl.ai/wheels/torch-2.4/cu124/repo.html
      #     pip install torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0 --index-url https://download.pytorch.org/whl/cu121
      #     pip install torch-scatter torch-sparse torch-spline-conv torch-cluster -f https://data.pyg.org/whl/torch-2.1.0+cu121.html
      #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install dependencies (CPU stack)
        env:
          CUDA_VISIBLE_DEVICES: ""
        run: |
          python -m pip install --upgrade pip

          pip install torch==2.4.0+cpu torchvision==0.19.0+cpu torchaudio==2.4.0+cpu --index-url https://download.pytorch.org/whl/cpu
          pip install dgl -f https://data.dgl.ai/wheels/torch-2.4/repo.html
          pip install torch-scatter torch-sparse torch-spline-conv torch-cluster -f https://data.pyg.org/whl/torch-2.4.0+cpu.html
          
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Unit run (${{ matrix.config }})
        run: |
          python ./main.py \
            --config-name ${{ matrix.config }} \
            "job.tasks=['caco2_wang','hia_hou']" \
            "+wandb.tags=['debug']"

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.config }}
          path: |
            **/*.log
            outputs/**
          if-no-files-found: ignore